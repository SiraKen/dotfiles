#!/bin/sh

trap catch ERR
trap finish EXIT

#
# Functions ------------------------------
#
mes() {
    printf "\e[32mInstalling: \e[m$1\n"
}
finish() {
    printf "\n\e[1;37;42m Done \e[m\n\n"
}
catch() {
    printf "\e[1;37;41m Error \e[m\n"
}

#
# Installer --------------------------------
#

# --- bash
mes "bash"
ln -sf ~/dotfiles/.bashrc ~/.bashrc

# --- zsh
mes "zsh"
ln -sf ~/dotfiles/.zprofile ~/.zprofile
ln -sf ~/dotfiles/.zshrc ~/.zshrc

# --- fish
mes "fish"
ln -sf ~/dotfiles/.config/fish/ ~/.config

# --- tmux
mes "tmux"
ln -sf ~/dotfiles/.tmux.conf ~/.tmux.conf
ln -sf ~/dotfiles/.tmux.conf.darwin ~/.tmux.conf.darwin
ln -sf ~/dotfiles/.tmux.powerline.conf ~/.tmux.powerline.conf

# --- Starship
mes "Starship"
ln -sf ~/dotfiles/.config/starship.toml ~/.config

# --- Git
mes "Git"
ln -sf ~/dotfiles/.config/git/ ~/.config

# --- Emacs
mes "Emacs"
# ln -sf ~/dotfiles/.emacs.d/ ~/.emacs.d
# Use Spacemacs instead of above (check if .emacs.d exists)
if [ ! -d ~/.emacs.d ]; then
    git clone https://github.com/syl20bnr/spacemacs $HOME/.emacs.d
fi
ln -sf ~/dotfiles/.spacemacs.d/ ~/.spacemacs.d

# --- Vim
mes "Vim"
ln -sf ~/dotfiles/.vimrc ~/.vimrc

# --- Neovim
mes "Neovim"
ln -sf ~/dotfiles/.config/nvim/ ~/.config

# --- Helix
mes "Helix"
ln -sf ~/dotfiles/.config/helix/ ~/.config

# --- Kakoune
mes "Kakoune"
ln -sf ~/dotfiles/.config/kak/ ~/.config

# --- MongoDB Shell
mes "MongoDB Shell"
ln -sf ~/dotfiles/.mongoshrc.js ~/.mongoshrc.js

# --- PowerShell
mes "PowerShell"
mkdir -p ~/.config/powershell
ln -sf ~/dotfiles/.config/powershell/linux.ps1 ~/.config/powershell/Microsoft.PowerShell_profile.ps1

# --- Hyper
mes "Hyper"
ln -sf ~/dotfiles/.hyper.js ~/.hyper.js

# --- npm
mes "npm"
ln -sf ~/dotfiles/.npmrc ~/.npmrc
